🔁 Nested Association (📌 “İlişkili Tablolar İçinde İlişkiler”)


🎯 Bu Konu Neden Önemli?
Şimdiye kadar öğrendiğimiz ASSOCIATION, bir view’in başka bir tabloya veya view’e bağlanmasını sağlıyordu.
Ama gerçek hayatta, çoğu zaman ilişkiler tek katmanlı değildir:
	• Uçuş → Havayolu
	• Uçuş → Uçuş Planı → Kalkış Şehri
	• Sipariş → Müşteri → Ülke
	• Fatura → Malzeme → Malzeme Grubu
Yani:
	Bir tablo bir başkasıyla, o da başka bir tabloyla bağlıdır.


🧠 Mantığı
	CDS’te bir association içinde, başka bir association tanımlayabiliriz.
	Buna “nested association” denir.
Bu sayede birden fazla seviyede ilişkiyi tek bir CDS View içinde tanımlayabilir ve gerektiğinde UI, OData veya başka view’lerde bu zinciri izleyebiliriz.



🧩 Basit Senaryo: Uçuş → Uçuş Planı → Kalkış Şehri
Tablo İlişkileri:
	• SFLIGHT → SPFLI üzerinden bağlantı: CARRID + CONNID
	• SPFLI → SCITY gibi bir şehir tablosuna bağlanabilir


🔧 Örnek: Nested Association ile CDS :

@AbapCatalog.sqlViewName: 'ZCDS_NESTED_FLIGHT'
@AccessControl.authorizationCheck: #NOT_REQUIRED
define view ZC_FLIGHT_NESTED as select from sflight as f
  association [0..1] to spfli as _flight_plan
    on f.carrid = _flight_plan.carrid and
       f.connid = _flight_plan.connid

{
  key f.carrid,
  key f.connid,
  f.fldate,

  -- 1. seviye ilişki: uçuş planı
  _flight_plan.cityfrom,

  -- 2. seviye nested ilişki: kalkış şehri detayları
  _flight_plan._cityfrom.name as departure_city_name
}


Burada:
	• _flight_plan: SFLIGHT → SPFLI ilişkisi
	• _flight_plan._cityfrom: SPFLI view'inin içinde tanımlı başka bir association (şehir detaylarına)
	• Bu zincir sayesinde tek CDS view içinde birçok katmanlı bilgiye ulaşabiliyoruz.

🪜 Association Zinciri

SFLIGHT
  └── _flight_plan (SPFLI)
         └── _cityfrom (CITY)

UI5 veya Fiori Elements gibi teknolojiler bu nested association’ları otomatik olarak tanır ve bağlar.

✅ Avantajları
Özellik	Açıklama
Çok katmanlı veri modeli	Gerçek hayattaki veri ilişkilerine bire bir uyar
Daha az JOIN, daha çok anlam	View’ler birbirine bağlı ama esnek
Tek sorguda çok bilgiye ulaşma	Uçuş → Plan → Şehir gibi zincirler çok kolay hale gelir


⚠️ Dikkat Edilecek Noktalar
Nokta	Açıklama
Her ilişki “optional” olmalı	[0..1] ya da [1..1] şeklinde tanımlanmalı
Performans kontrolü şart	Çok derin nested ilişkiler bazen performansı etkileyebilir
Fiori Elements’te dikkatli kullanılmalı	Tüm ilişkiler UI’a yansıyabilir, sade kalmaya çalış


🧪 Öneri
Bir test sistemi olduğunda, kendi uçuş veritabanını baz alarak:
	• SFLIGHT → SPFLI → SCARR → T005T gibi örneklerle nested yapı oluşturabiliriz.
	• UI’daki sonucu görmek de çok öğretici olur.

